/* tslint:disable */
/* eslint-disable */
/**
 * SMEIoT API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    BasicBrokerApiModel,
    BasicBrokerApiModelFromJSON,
    BasicBrokerApiModelToJSON,
    BrokerStatisticsApiModel,
    BrokerStatisticsApiModelFromJSON,
    BrokerStatisticsApiModelToJSON,
    ProblemDetails,
    ProblemDetailsFromJSON,
    ProblemDetailsToJSON,
} from '../models';

/**
 * no description
 */
export class BrokerApi extends runtime.BaseAPI {

    /**
     */
    async apiBrokerBasicGetRaw(): Promise<runtime.ApiResponse<BasicBrokerApiModel>> {
        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/broker/basic`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => BasicBrokerApiModelFromJSON(jsonValue));
    }

    /**
     */
    async apiBrokerBasicGet(): Promise<BasicBrokerApiModel> {
        const response = await this.apiBrokerBasicGetRaw();
        return await response.value();
    }

    /**
     */
    async apiBrokerStatisticsGetRaw(): Promise<runtime.ApiResponse<BrokerStatisticsApiModel>> {
        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/broker/statistics`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => BrokerStatisticsApiModelFromJSON(jsonValue));
    }

    /**
     */
    async apiBrokerStatisticsGet(): Promise<BrokerStatisticsApiModel> {
        const response = await this.apiBrokerStatisticsGetRaw();
        return await response.value();
    }

}
