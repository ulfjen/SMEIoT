/* tslint:disable */
/* eslint-disable */
/**
 * SMEIoT API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    NumberTimeSeriesApiModel,
    NumberTimeSeriesApiModelFromJSON,
    NumberTimeSeriesApiModelFromJSONTyped,
    NumberTimeSeriesApiModelToJSON,
} from './';

/**
 * 
 * @export
 * @interface SensorDetailsApiModel
 */
export interface SensorDetailsApiModel {
    /**
     * 
     * @type {string}
     * @memberof SensorDetailsApiModel
     */
    deviceName: string;
    /**
     * 
     * @type {string}
     * @memberof SensorDetailsApiModel
     */
    sensorName: string;
    /**
     * 
     * @type {string}
     * @memberof SensorDetailsApiModel
     */
    status: SensorDetailsApiModelStatusEnum;
    /**
     * 
     * @type {Array<NumberTimeSeriesApiModel>}
     * @memberof SensorDetailsApiModel
     */
    data: Array<NumberTimeSeriesApiModel>;
    /**
     * 
     * @type {string}
     * @memberof SensorDetailsApiModel
     */
    startedAt: string | null;
    /**
     * 
     * @type {string}
     * @memberof SensorDetailsApiModel
     */
    duration: string | null;
}

export function SensorDetailsApiModelFromJSON(json: any): SensorDetailsApiModel {
    return SensorDetailsApiModelFromJSONTyped(json, false);
}

export function SensorDetailsApiModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): SensorDetailsApiModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'deviceName': json['deviceName'],
        'sensorName': json['sensorName'],
        'status': json['status'],
        'data': ((json['data'] as Array<any>).map(NumberTimeSeriesApiModelFromJSON)),
        'startedAt': json['startedAt'],
        'duration': json['duration'],
    };
}

export function SensorDetailsApiModelToJSON(value?: SensorDetailsApiModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'deviceName': value.deviceName,
        'sensorName': value.sensorName,
        'status': value.status,
        'data': ((value.data as Array<any>).map(NumberTimeSeriesApiModelToJSON)),
        'startedAt': value.startedAt,
        'duration': value.duration,
    };
}

/**
* @export
* @enum {string}
*/
export enum SensorDetailsApiModelStatusEnum {
    NotRegistered = 'NotRegistered',
    NotConnected = 'NotConnected',
    Connected = 'Connected'
}


