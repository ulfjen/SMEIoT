/* tslint:disable */
/* eslint-disable */
/**
 * SMEIoT API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    DeviceConfigSuggestApiModel,
    DeviceConfigSuggestApiModelFromJSON,
    DeviceConfigSuggestApiModelToJSON,
} from '../models';

/**
 * no description
 */
export class DevicesConfigApi extends runtime.BaseAPI {

    /**
     */
    async apiDevicesSuggestBootstrapConfigGetRaw(): Promise<runtime.ApiResponse<DeviceConfigSuggestApiModel>> {
        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/devices/suggest_bootstrap_config`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => DeviceConfigSuggestApiModelFromJSON(jsonValue));
    }

    /**
     */
    async apiDevicesSuggestBootstrapConfigGet(): Promise<DeviceConfigSuggestApiModel> {
        const response = await this.apiDevicesSuggestBootstrapConfigGetRaw();
        return await response.value();
    }

    /**
     */
    async apiDevicesSuggestDeviceNameGetRaw(): Promise<runtime.ApiResponse<DeviceConfigSuggestApiModel>> {
        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/devices/suggest_device_name`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => DeviceConfigSuggestApiModelFromJSON(jsonValue));
    }

    /**
     */
    async apiDevicesSuggestDeviceNameGet(): Promise<DeviceConfigSuggestApiModel> {
        const response = await this.apiDevicesSuggestDeviceNameGetRaw();
        return await response.value();
    }

    /**
     */
    async apiDevicesSuggestKeyGetRaw(): Promise<runtime.ApiResponse<DeviceConfigSuggestApiModel>> {
        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/devices/suggest_key`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => DeviceConfigSuggestApiModelFromJSON(jsonValue));
    }

    /**
     */
    async apiDevicesSuggestKeyGet(): Promise<DeviceConfigSuggestApiModel> {
        const response = await this.apiDevicesSuggestKeyGetRaw();
        return await response.value();
    }

}
